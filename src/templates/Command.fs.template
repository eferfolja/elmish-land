//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by elmish-land.
//
//     Changes to this file may cause incorrect behavior and will be lost when
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ElmishLand

open Elmish
open Feliz
open ElmishLand.Routes
open ElmishLand.Routes.Route

[<RequireQualifiedAccess>]
type Command<'msg, 'sharedMsg, 'layoutMsg> private =
    | None
    | Batch of Command<'msg, 'sharedMsg, 'layoutMsg> list
    | Cmd of Cmd<'msg>
    | SharedMsg of 'sharedMsg
    | LayoutMsg of 'layoutMsg

module Command =
    let none = Command.None

    let ofPromise p arg ofSuccess = Cmd.OfPromise.perform p arg ofSuccess |> Command.Cmd

    let tryOfPromise p arg ofSuccess ofError = Cmd.OfPromise.either p arg ofSuccess ofError |> Command.Cmd

    let ofCmd (cmd: Cmd<'msg>) = Command.Cmd(cmd)

    let ofMsg (msg: 'msg) =
        Command.Cmd(Cmd.ofMsg msg)

    let batch cmds = Command.Batch cmds

    let ofShared msg = Command.SharedMsg msg

    let ofLayout msg = Command.LayoutMsg (msg)

    let navigate route = route |> format |> Router.Cmd.navigate |> ofCmd
